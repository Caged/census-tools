#!/bin/sh

usage() { echo "Usage: $0 [-d postgres database] [-s shapefile directory] [-c csv data directory]" 1>&2; exit 1; }

while getopts ":d:s:c:p:" opt; do
  case $opt in
    d)
      dbname=$OPTARG
      ;;
    s)
      shapefile_dir=$OPTARG
      ;;
    c)
      csv_dir=$OPTARG
      ;;
    p)
      reproject=$OPTARG
      ;;
    *)
      usage
      ;;
  esac
done

shift $((OPTIND-1))

if [ -z "${dbname}" ] || [ -z "${shapefile_dir}" ]; then
    usage
fi

# Drop and recreate database
dropdb --interactive -e $dbname
createdb --encoding UTF8 $dbname

# Create the POSTGIS extension
psql -d $dbname -c 'CREATE EXTENSION postgis'

# Create some temporary directories
tmp_shapefile_dir=$(mktemp -d -t nhgis)
tmp_reprojected_shapefile_dir=$(mktemp -d -t nhgis)
tmp_data_dir=$(mktemp -d -t nhgis)

# Decompress shape and data files
tar -xzmv --totals -C $tmp_shapefile_dir -f $shapefile_dir
tar -xzmv --totals -C $tmp_data_dir -f $csv_dir

# Decompress any zip files that were part of the original archive
for file in $(find $tmp_shapefile_dir -name "*.zip"); do \
  tar -xzmv -C $tmp_shapefile_dir -f $file
  rm $file
done

# Reproject shapefiles to EPSG:4326
for file in $(find $tmp_shapefile_dir -name "*.shp"); do \
  file_name=$(basename $file)
  ogr2ogr -f 'ESRI Shapefile' -t_srs EPSG:4326 "${tmp_reprojected_shapefile_dir}/${file_name}" $file
done

# Clean up old, unprojected shapefiles
rm -rf $tmp_shapefile_dir

# Create initial table schema and then delete the data so we can itterate through
# all the files later to append them to the table
first_file=$(find $tmp_reprojected_shapefile_dir -name "*.shp" | head -n 1)
shp2pgsql -s 4326 -i -D $first_file "${dbname}_blocks" | psql $dbname
psql -c "delete from ${dbname}_blocks" $dbname

# NHGIS shape files can be inconsistent in some areas, so we need to manually
# add some attributes that aren't present in all shapefiles when importing
# two or more files.
psql -c "alter table ${dbname}_blocks add column uatyp10 varchar(30), add column shape_len numeric" $dbname

# Import all reprojected shape files into the database
for file in $(find $tmp_reprojected_shapefile_dir -name "*.shp"); do \
  shp2pgsql -a -g geom -s 4326 -D $file "${dbname}_blocks" | psql -d $dbname
done

# Cleanup temporary directory for reprojected shapefiles
rm -rf $tmp_reprojected_shapefile_dir

